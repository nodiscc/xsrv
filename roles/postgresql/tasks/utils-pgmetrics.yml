- name: download pgmetrics
  get_url:
    url: https://github.com/rapidloop/pgmetrics/releases/download/v1.14.1/pgmetrics_1.14.1_linux_amd64.tar.gz
    dest: /root/pgmetrics_1.14.1_linux_amd64.tar.gz
    owner: root
    group: root
    mode: "0640"

- name: create pgmetrics tarball extraction directory
  file:
    path: /root/pgmetrics-unpack
    state: directory
    mode: "0750"

- name: extract pgmetrics tar.gz
  unarchive:
    src: "/root/pgmetrics_1.14.1_linux_amd64.tar.gz"
    dest: "/root/pgmetrics-unpack"
    remote_src: yes
    owner: root
    group: root
    mode: u=rwX,g=rX,o=rX
  ignore_errors: "{{ ansible_check_mode }}"

- name: copy pgmetrics binary in place
  copy:
    remote_src: yes
    src: /root/pgmetrics-unpack/pgmetrics_1.14.1_linux_amd64/pgmetrics
    dest: /usr/local/bin/pgmetrics
    owner: root
    group: root
    mode: "0755"
  ignore_errors: "{{ ansible_check_mode }}"

- name: run pgmetrics
  become: yes
  become_user: postgres
  command:
    cmd: /usr/local/bin/pgmetrics --no-password --output=/var/log/postgresql/pgmetrics.log
  changed_when: yes

- name: harden read permissions on pgmetrics report
  file:
    path: /var/log/postgresql/pgmetrics.log
    owner: postgres
    group: adm
    mode: "0640"
  ignore_errors: "{{ ansible_check_mode }}"

- name: download pgmetrics report to data/pgmetrics-*.log
  fetch:
    src: /var/log/postgresql/pgmetrics.log
    dest: "{{ playbook_dir }}/data/pgmetrics-{{ inventory_hostname }}.log"
    flat: yes
  ignore_errors: "{{ ansible_check_mode }}"
