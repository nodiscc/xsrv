### FIREWALLD ###

- name: reload firewalld
  become: yes
  service:
    name: firewalld
    state: reloaded
    enabled: yes
  ignore_errors: "{{ ansible_check_mode }}"
  notify: restart libvirtd

- name: restart firewalld
  become: yes
  service:
    name: firewalld
    state: restarted
    enabled: yes
  ignore_errors: "{{ ansible_check_mode }}"
  notify: restart libvirtd

### FAIL2BAN ###

- name: reload fail2ban
  become: yes
  service:
    name: fail2ban
    state: reloaded
    enabled: yes
  ignore_errors: "{{ ansible_check_mode }}"

- name: restart fail2ban
  become: yes
  service:
    name: fail2ban
    state: restarted
    enabled: yes
  ignore_errors: "{{ ansible_check_mode }}"

### APACHE ###

- name: restart apache
  service:
    name: apache2
    state: restarted
    enabled: yes
  become: yes
  ignore_errors: "{{ ansible_check_mode }}"

- name: reload apache
  service:
    name: apache2
    state: reloaded
    enabled: yes
  become: yes
  ignore_errors: "{{ ansible_check_mode }}"

### MONITORING.RSYSLOG ###

- name: restart rsyslog
  become: yes
  service:
    name: rsyslog
    state: restarted
    enabled: yes
  ignore_errors: "{{ ansible_check_mode }}"

### MONITORING.EXPORTERS ###

- name: restart prometheus-exporter-exporter
  become: true
  systemd:
    name: prometheus-exporter-exporter.service
    state: restarted

- name: restart prometheus-php-fpm-exporter
  become: true
  systemd:
    name: prometheus-php-fpm-exporter.service
    state: restarted

- name: restart prometheus-blackbox-exporter
  become: true
  systemd:
    name: prometheus-blackbox-exporter.service
    state: restarted

### BACKUP/RSNAPSHOT ###

- name: check rsnapshot configuration
  become: yes
  command:
    cmd: rsnapshot configtest
  changed_when: no
  register: rsnapshot_configtest
  ignore_errors: "{{ ansible_check_mode }}"
  failed_when:
    - rsnapshot_configtest is defined
    - rsnapshot_configtest.rc != 0
    - not 'rsnapshot refuses to create snapshot_root when no_create_root is enabled' in rsnapshot_configtest.stderr

### LIBVIRT ###

- name: restart libvirtd
  become: yes
  service:
    name: libvirtd
    state: restarted
    enabled: yes
  when:
    - ansible_local.libvirt.ansible_managed is defined
    - ansible_local.libvirt.ansible_managed | bool
  ignore_errors: "{{ ansible_check_mode }}"

### GENERAL PURPOSE ###

- name: apply sysctl configuration
  become: yes
  command: sysctl --system
  changed_when: yes

- name: reload systemd unit files
  become: yes
  systemd:
    daemon_reload: yes

- name: re-execute the systemd manager
  become: yes
  systemd:
    daemon_reexec: yes

- name: update apt cache
  become: yes
  apt:
    update_cache: yes

- name: update ansible facts
  setup:
