##### USER #####

- name: create tt-rss user
  user:
    name: tt-rss
    state: present
    home: "{{ tt_rss_install_dir }}"
    create_home: no

##### PACKAGES #####

- name: install required packages for tt-rss
  apt:
    state: present
    update_cache: yes
    cache_valid_time: 900
    package:
      - php-common
      - php-xml
      - php-json
      - php-intl
      - php-mbstring
      - php-curl
      - php-gd
      - php-apcu
      - php-zip # required for data_migration plugin

##### TT-RSS INSTALLATION #####

- name: clone/upgrade tt-rss
  git:
    repo: https://git.tt-rss.org/fox/tt-rss.git
    dest: "{{ tt_rss_install_dir }}"
    version: '{{ tt_rss_version }}'
    accept_hostkey: yes
    force: yes
    umask: '022'
  no_log: true # very verbose in diff mode
  environment:
    GIT_HTTP_USER_AGENT: "Mozilla/5.0 (Windows NT 6.1; rv:45.0) Gecko/20100101 Firefox/45.0"
# (spoof git user agent to workaround buggy rate limiting on tt-rss.org)
# https://discourse.tt-rss.org/t/gitlab-config-problems-trailing-slash-in-clone-urls/192
# https://discourse.tt-rss.org/t/rate-limiting-for-some-git-related-requests/32
  ignore_errors: "{{ ansible_check_mode }}"

- name: set permissions on tt-rss files (always returns changed)
  file:
    path: "{{ item.path }}"
    owner: "{{ item.owner | default('tt-rss') }}"
    group: "{{ item.group | default('www-data') }}"
    mode: "{{ item.mode }}"
    recurse: "{{ item.recurse | default(True) }}"
  ignore_errors: "{{ ansible_check_mode }}"
  with_items:
    - path: "{{ tt_rss_install_dir }}"
      mode: "u=rwX,g=rwX,o="
    - path: "{{ tt_rss_install_dir }}/lib"
      mode: "u=rwX,g=rX,o="
    - path: "{{ tt_rss_install_dir }}/js"
      mode: "u=rwX,g=rX,o="
    - path: "{{ tt_rss_install_dir }}/images"
      mode: "u=rwX,g=rX,o="
    - path: "{{ tt_rss_install_dir }}/themes"
      mode: "u=rwX,g=rX,o="
    - path: "{{ tt_rss_install_dir }}/vendor"
      mode: "u=rwX,g=rX,o="
    - path: "{{ tt_rss_install_dir }}/cache"
      mode: "u=rwX,g=rX,o="
    - path: "{{ tt_rss_install_dir }}/feed-icons"
      mode: "u=rwX,g=rX,o="
    - path: "{{ tt_rss_install_dir }}/lock"
      mode: "u=rwX,g=rX,o="
    - path: "{{ tt_rss_install_dir }}"
      owner: "root"
      group: "tt-rss"
      mode: "0755"
      recurse: no
    - path: "{{ tt_rss_install_dir }}/.git"
      owner: "root"
      group: "tt-rss"
      mode: "0755"
  tags: tt_rss-permissions

- name: copy tt-rss configuration files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: tt-rss
    mode: "0640"
  ignore_errors: "{{ ansible_check_mode }}"
  with_items:
    - src: var_www_tt-rss_config.php.j2
      dest: "{{ tt_rss_install_dir }}/config.php"
    - src: var_www_tt-rss_version_static.txt.j2
      dest: "{{ tt_rss_install_dir }}/version_static.txt"

### INITIAL DB POPULATION ###

- name: import tt-rss database schema to postgresql
  postgresql_query:
    login_host: "localhost"
    login_user: "{{ tt_rss_db_user }}"
    login_password: "{{ tt_rss_db_password }}"
    db: "{{ tt_rss_db_name }}"
    path_to_script: "{{ tt_rss_install_dir }}/sql/pgsql/schema.sql"
    as_single_query: yes
  when: (ansible_local.tt_rss.general.db_imported is not defined) or (not ansible_local.tt_rss.general.db_imported)
  ignore_errors: "{{ ansible_check_mode }}"

- name: load/upgrade tt-rss database schema
  become: yes
  become_user: tt-rss
  command:
    cmd: /usr/bin/php {{ tt_rss_install_dir }}/update.php --update-schema=force-yes
  register: tt_rss_db_upgrade
  changed_when: "'Database schema is already at latest version.' not in tt_rss_db_upgrade.stdout"
  ignore_errors: "{{ ansible_check_mode }}"
  vars:
    ansible_remote_tmp: /tmp

- name: update tt-rss admin account in postgresql database (always returns changed)
  become_user: postgres
  postgresql_query:
    db: "{{ tt_rss_db_name }}"
    query: UPDATE ttrss_users SET login = '{{ tt_rss_user }}', pwd_hash = 'MODE2:{{ (tt_rss_password_salt + tt_rss_password) | hash('sha256') }}', salt     = '{{ tt_rss_password_salt }}' WHERE id = 1;
  ignore_errors: "{{ ansible_check_mode }}"

- name: create tt-rss installed fact file
  template:
    src: etc_ansible_facts.d_tt_rss.fact.j2
    dest: /etc/ansible/facts.d/tt_rss.fact
    mode: "0644"


### SCHEDULING ###

- name: setup tt-rss feed update cron job
  cron:
    user: tt-rss
    cron_file: '/etc/cron.d/tt-rss'
    name: ttrss_update
    hour: '*'
    minute: '0'
    job: '/usr/bin/php {{ tt_rss_install_dir }}/update.php --feeds --quiet 2>&1 | logger -t tt-rss-update'
