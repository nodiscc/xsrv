##### PACKAGES #####

- name: install apache/php packages
  apt:
    state: present
    package:
      - apache2
      - libapache2-mod-evasive
      - libapache2-mod-md
      - libapache2-mod-fcgid
      - php{{ apache_php_fpm_version }}-apcu
      - php{{ apache_php_fpm_version }}
      - php{{ apache_php_fpm_version }}-fpm
  tags: ssl

- name: remove mod-php (replaced with php-fpm)
  apt:
    package:
      - libapache2-mod-php
      - libapache2-mod-php7.0
      - libapache2-mod-php7.2
      - libapache2-mod-php7.3
      - libapache2-mod-php7.4
      - libapache2-mod-php8.1
      - libapache2-mod-php8.2
    state: absent
  notify: restart apache

- name: create directory for apache2 systemd overrides
  file:
    state: directory
    path: /etc/systemd/system/apache2.service.d/
    owner: root
    group: root
    mode: "0755"

- name: configure apache2 systemd unit overrides
  template:
    src: etc_systemd_system_apache2.service.d_override.conf.j2
    dest: /etc/systemd/system/apache2.service.d/override.conf
    owner: root
    group: root
    mode: "0644"
  notify:
    - reload systemd unit files
    - restart apache

# restart apache to apply mod-php removal and systemd configuration overrides
- name: apply configuration (flush handlers)
  meta: flush_handlers

##### APACHE MODULES/CONFIGURATION #####

- name: copy apache/php configuration
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    mode: "0644"
  with_items:
    - { src: 'etc_apache2_conf-available_security.conf.j2', dest: '/etc/apache2/conf-available/security.conf' }
    - { src: 'etc_apache2_conf-available_logging.conf.j2', dest: '/etc/apache2/conf-available/logging.conf' }
    - { src: 'etc_apache2_conf-available_ssl-common.conf.j2', dest: '/etc/apache2/conf-available/ssl-common.conf' }
    - { src: 'etc_apache2_conf-available_mod-md.conf.j2', dest: '/etc/apache2/conf-available/mod-md.conf' }
    - { src: 'etc_apache2_ports.conf.j2', dest: '/etc/apache2/ports.conf' }
    - { src: 'etc_php_PHPVERSION_fpm_pool.d_www.conf.j2', dest: '/etc/php/{{ apache_php_fpm_version }}/fpm/pool.d/www.conf' }
    - { src: 'etc_php_PHPVERSION_cli_conf.d_20-apcu.ini.j2', dest: '/etc/php/{{ apache_php_fpm_version }}/cli/conf.d/20-apcu.ini' }
  notify:
    - reload apache
    - restart php-fpm (apache)
  tags: ssl

- name: disable unnecessary apache modules
  command: a2dismod {{ item }}
  args:
    removes: /etc/apache2/mods-enabled/{{ item }}.load
  with_items:
    - 'cgi'
    - 'php7.0' # conflicts with mpm_event
    - 'php7.2' # conflicts with mpm_event
    - 'php7.3' # conflicts with mpm_event
    - 'php7.4' # conflicts with mpm_event
    - 'php8.1' # conflicts with mpm_event
    - 'php8.2' # conflicts with mpm_event
    - 'mpm_prefork' # conflicts with mpm_event
  notify: restart apache

- name: enable apache modules
  command: a2enmod {{ item }}
  args:
    creates: "/etc/apache2/mods-enabled/{{ item }}.load"
  with_items:
    - 'auth_basic'
    - 'headers'
    - 'rewrite'
    - 'md'
    - 'ssl'
    - 'mpm_event'
    - 'proxy'
    - 'proxy_http'
    - 'proxy_fcgi'
    - 'http2'
  notify: restart apache
  tags: ssl

- name: enable apache configuration snippets
  command: a2enconf {{ item }}
  args:
    creates: "/etc/apache2/conf-enabled/{{ item }}.conf"
  with_items:
    - 'security'
    - 'logging'
    - 'ssl-common'
    - 'mod-md'
    - 'php{{ apache_php_fpm_version }}-fpm'
  notify: reload apache
  tags: ssl

- name: disable apache configuration snippets
  command: a2disconf {{ item }}
  args:
    removes: "/etc/apache2/conf-enabled/{{ item }}.conf"
  with_items:
    - 'other-vhosts-access-log'
  notify: reload apache

- name: include mod-evasive configuration tasks
  import_tasks: apache-mod-evasive.yml
  tags: apache-mod-evasive

##### VIRTUALHOSTS #####

- name: copy apache sites config
  template:
    src: etc_apache2_sites-available_000-sites.conf.j2
    dest: /etc/apache2/sites-available/000-sites.conf
    mode: "0644"
  notify: reload apache
  tags: apache-reverseproxy

- name: enable apache sites configuration
  command: a2ensite 000-sites
  args:
    creates: /etc/apache2/sites-enabled/000-sites.conf
  notify: reload apache
  tags: apache-reverseproxy

- name: remove apache default sites
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - /etc/apache2/sites-enabled/000-default.conf
    - /etc/apache2/sites-enabled/default-ssl.conf
    - /var/www/html/index.html
  notify: reload apache

- name: apply apache configuration (flush handlers)
  meta: flush_handlers

##### MOD_MD #####

- name: create work directory for mod_md automatic reload script
  file:
    state: directory
    path: /var/lib/apache2/md
    owner: www-data
    group: www-data
    mode: "0755"

- name: copy automatic reload script for mod_md MDMessageCmd
  copy:
    src: usr_local_bin_apache-mod-md-reload
    dest: /usr/local/bin/apache-mod-md-reload
    owner: root
    group: root
    mode: "0755"

- name: schedule automatic reload of the service on mod_md certificate changes
  cron:
    user: root
    cron_file: '/etc/cron.d/apache-mod-md-reload'
    name: apache-mod-md-reload
    hour: '*'
    minute: '*'
    day: '*'
    job: '/usr/local/bin/apache-mod-md-reload check-reload | logger -t apache-mod-md-reload'

##### MAINTENANCE PAGE #####

- name: create directory for maintenance page
  file:
    state: directory
    path: /var/www/maintenance
    owner: root
    group: root
    mode: "0755"

- name: copy maintenance page
  copy:
    src: var_www_maintenance_maintenance.html
    dest: /var/www/maintenance/maintenance.html
    owner: root
    group: root
    mode: "0644"
  ignore_errors: "{{ ansible_check_mode }}"

##### SERVICES #####

- name: enable/disable start/stop apache2 service
  systemd:
    name: apache2
    enabled: "{{ apache_enable_service }}"
    state: "{{ 'started' if apache_enable_service else 'stopped' }}"
    daemon_reload: yes
  ignore_errors: "{{ ansible_check_mode }}"

- name: enable/disable start/stop php-fpm service
  systemd:
    name: php{{ apache_php_fpm_version }}-fpm
    enabled: "{{ apache_enable_service }}"
    state: "{{ 'started' if apache_enable_service else 'stopped' }}"
    daemon_reload: yes
  ignore_errors: "{{ ansible_check_mode }}"
