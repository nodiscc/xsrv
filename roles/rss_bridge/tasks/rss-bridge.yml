- name: install required packages
  apt:
    state: present
    package:
      - php7.4-xml
      - php7.4-mbstring
      - php7.4-curl
      - php7.4-json
      - php7.4-sqlite3

### GET/SET FACTS ###

- name: check if rss-bridge installation directory exists
  stat:
    path: "/var/www/{{ rss_bridge_fqdn }}"
  register: rss_bridge_dir

- name: abort on unsupported conditions
  fail:
    msg: "ERROR: unsupported conditions: rss_bridge_dir.stat.exists: {{ rss_bridge_dir.stat.exists }}, but ansible_local.rss_bridge.installed.version says otherwise" # noqa 204
  when: '((ansible_local.rss_bridge.installed.version is defined) and (not rss_bridge_dir.stat.exists)) or
         ((ansible_local.rss_bridge.installed.version is undefined) and (rss_bridge_dir.stat.exists))'

- name: set the default installation action (do nothing)
  set_fact:
    rss_bridge_action: none

- name: check if initial installation should be performed
  set_fact:
    rss_bridge_action: initial
  when:
    - ansible_local.rss_bridge.installed.version is undefined
    - not rss_bridge_dir.stat.exists

- name: check if upgrade should be performed
  set_fact:
    rss_bridge_action: upgrade
  when:
    - ansible_local.rss_bridge.installed.version is defined
    - ansible_local.rss_bridge.installed.version < rss_bridge_version
    - rss_bridge_dir.stat.exists

# - debug:
#     msg: "action: {{ rss_bridge_action }}, rss_bridge_dir.stat.exists: {{ rss_bridge_dir.stat.exists }}, rss_bridge_version: {{ rss_bridge_version }}"

### DOWNLOAD/INSTALLATION ###

- name: download rss-bridge zip
  get_url:
    url: "https://github.com/RSS-Bridge/rss-bridge/archive/refs/tags/{{ rss_bridge_version }}.zip"
    dest: "/root/rss-bridge-{{ rss_bridge_version }}.zip"
    owner: root
    group: root
    mode: 0640
  when: rss_bridge_action == 'initial' or rss_bridge_action == 'upgrade'

- name: create rss-bridge zip extraction directory
  file:
    path: /root/rss-bridge-unpack
    state: directory
    mode: 0750
  when: rss_bridge_action == 'initial' or rss_bridge_action == 'upgrade'
  check_mode: no # create even in check mode so that following tasks don't fail

- name: extract rss-bridge zip
  unarchive:
    src: "/root/rss-bridge-{{ rss_bridge_version }}.zip"
    dest: "/root/rss-bridge-unpack"
    owner: root
    group: www-data
    remote_src: yes
    mode: u=rwX,g=rX,o=
  no_log: True
  when: rss_bridge_action == 'initial' or rss_bridge_action == 'upgrade'
  ignore_errors: "{{ ansible_check_mode }}"

- name: give write permissions to the webserver
  file:
    path: "{{ item.path }}"
    group: www-data
    mode: "{{ item.mode }}"
    recurse: no
  with_items:
    - { path: "/root/rss-bridge-unpack/rss-bridge-{{ rss_bridge_version }}/cache", mode: "g+w" }
  when: rss_bridge_action == 'initial' or rss_bridge_action == 'upgrade'
  ignore_errors: "{{ ansible_check_mode }}"

- name: move old rss-bridge installation to temporary dir
  command: mv '/var/www/{{ rss_bridge_fqdn }}' '/var/www/{{ rss_bridge_fqdn }}.old'
  args:
    removes: '/var/www/{{ rss_bridge_fqdn }}'
  when: rss_bridge_action == 'upgrade'

- name: move rss-bridge extraction directory to install directory
  command: mv /root/rss-bridge-unpack/rss-bridge-{{ rss_bridge_version }} '/var/www/{{ rss_bridge_fqdn }}'
  when: rss_bridge_action == 'initial' or rss_bridge_action == 'upgrade'

### CONFIG ###

- name: copy rss-bridge configuration file
  template:
    src: var_www_rss-bridge_config.ini.php.j2
    dest: /var/www/{{ rss_bridge_fqdn }}/config.ini.php
    owner: root
    group: www-data
    mode: 0640
  no_log: yes # file contains sensitive values (username/password), dont log/show diff

### CLEANUP ###

- name: remove rss-bridge zip extraction directory
  file:
    path: /root/rss-bridge-unpack
    state: absent

- name: remove old rss-bridge installation
  file:
    path: '/var/www/{{ rss_bridge_fqdn }}.old'
    state: absent
  no_log: True
  when:
    - rss_bridge_action == 'upgrade'
