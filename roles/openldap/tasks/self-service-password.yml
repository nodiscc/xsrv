### REQUIREMENTS ###

- name: installed required php extensions
  apt:
    package:
      - "php{{ php_fpm_version }}-ldap"
      - "php{{ php_fpm_version }}-mbstring"
      - smarty3

### SELF SERVICE PASSWORD INSTALLATION ###

##### GET/SET FACTS #####

- name: check if self-service-password installation directory exists
  stat:
    path: "{{ self_service_password_install_dir }}"
  register: openldap_self_service_password_dir

- name: set the default installation action (do nothing)
  set_fact:
    openldap_self_service_password_action: none

- name: check if initial installation should be performed
  set_fact:
    openldap_self_service_password_action: initial
  when:
    - ansible_local.self_service_password.installed.version is undefined
    - not openldap_self_service_password_dir.stat.exists

- name: check if upgrade should be performed
  set_fact:
    openldap_self_service_password_action: upgrade
  when:
    - ansible_local.self_service_password.installed.version is defined
    - ansible_local.self_service_password.installed.version < self_service_password_version
    - openldap_self_service_password_dir.stat.exists

##### DOWNLOAD/INSTALLATION #####

- name: download self-service-password tar.gz
  get_url:
    url: https://ltb-project.org/archives/ltb-project-self-service-password-{{ self_service_password_version }}.tar.gz
    dest: /root/self-service-password-{{ self_service_password_version }}.tar.gz
    owner: root
    group: root
    mode: "0640"
  retries: 3
  when: openldap_self_service_password_action == 'initial' or openldap_self_service_password_action == 'upgrade'
  check_mode: no

- name: create self-service-password tar.gz extraction directory
  file:
    path: /root/self-service-password-unpack
    state: directory
    mode: "0750"
  when: openldap_self_service_password_action == 'initial' or openldap_self_service_password_action == 'upgrade'
  check_mode: no

- name: extract self-service-password tar.gz
  unarchive:
    src: "/root/self-service-password-{{ self_service_password_version }}.tar.gz"
    dest: "/root/self-service-password-unpack"
    remote_src: yes
    owner: root
    group: www-data
    mode: u=rwX,g=rX
  when: openldap_self_service_password_action == 'initial' or openldap_self_service_password_action == 'upgrade'

- name: delete old self-service-password installation
  file:
    path: '{{ self_service_password_install_dir }}'
    state: absent
  when: openldap_self_service_password_action == 'upgrade'

- name: move self_service_password extraction directory to install directory
  command: mv /root/self-service-password-unpack/ltb-project-self-service-password-{{ self_service_password_version }} '{{ self_service_password_install_dir }}'
  when: openldap_self_service_password_action == 'initial' or openldap_self_service_password_action == 'upgrade'
  changed_when: yes

- name: create templates directory
  file:
    state: directory
    path: "{{ self_service_password_install_dir }}/templates_c"
    owner: root
    group: www-data
    mode: "0775"


##### ANSIBLE FACTS #####

- name: create ansible facts.d directory
  file:
    path: /etc/ansible/facts.d
    state: directory
    mode: "0755"

- name: create self-service-password installed fact file
  template:
    src: etc_ansible_facts.d_self_service_password.fact.j2
    dest: /etc/ansible/facts.d/self_service_password.fact
    mode: "0644"

### CONFIGURATION ###

- name: copy self-service-password configuration
  template:
    src: "var_www_self-service-password_conf_config.inc.local.php.j2"
    dest: "{{ self_service_password_install_dir }}/conf/config.inc.local.php"
    owner: root
    group: www-data
    mode: "0640"

- name: create directories for self-service-password stylesheet/images
  file:
    state: directory
    path: "{{ self_service_password_install_dir }}/htdocs/{{ item }}"
    owner: root
    group: www-data
    mode: "0755"
  with_items:
    - images
    - css

- name: copy self-service-password stylesheet/images
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: www-data
    mode: "0644"
  with_items:
    - src: var_www_self-service-password_htdocs_images_background.png
      dest: "{{ self_service_password_install_dir }}/htdocs/images/background.png"
    - src: var_www_self-service-password_htdocs_images_logo.png
      dest: "{{ self_service_password_install_dir }}/htdocs/images/logo.png"
    - src: var_www_self-service-password_htdocs_css_self-service-password.css
      dest: "{{ self_service_password_install_dir }}/htdocs/css/self-service-password.css"

### CLEANUP ###

- name: remove self-service-password tar.gz extraction directory
  file:
    path: /root/self-service-password-unpack
    state: absent

### SSL/TLS CERTIFICATES ###

- name: include self-service-password self-signed certificates configuration tasks
  import_tasks: self-service-password-ssl-selfsigned.yml
  tags: ssl
  when:
    - self_service_password_https_mode == 'selfsigned'
    - ansible_local.apache.ansible_managed is defined
    - ansible_local.apache.ansible_managed | bool

### APACHE CONFIGURATION ###

- name: include self-service-password apache configuration tasks
  import_tasks: self-service-password-apache.yml
  tags: apache
  when:
    - ansible_local.apache.ansible_managed is defined
    - ansible_local.apache.ansible_managed | bool

- name: apply configuration (flush handlers)
  meta: flush_handlers
