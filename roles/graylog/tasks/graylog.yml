##### GRAYLOG #####

- name: download graylog-5.1-repository deb package
  get_url:
    url: "https://packages.graylog2.org/repo/packages/graylog-5.1-repository_latest.deb"
    dest: "/root/graylog-5.1-repository_latest.deb"
    owner: root
    group: root
    mode: "0640"
  ignore_errors: "{{ ansible_check_mode }}" # HEAD requests are forbidden/403

- name: install graylog-5.1-repository package
  apt:
    deb: "/root/graylog-5.1-repository_latest.deb"
    state: present
    dpkg_options: "force-all"
  notify: update apt cache
  ignore_errors: "{{ ansible_check_mode }}"

# update apt cache immediately if graylog-repository package was installed
- name: apply configuration (flush handlers)
  meta: flush_handlers

- name: install graylog-server package
  apt:
    pkg: "graylog-server"
    state: present
  ignore_errors: "{{ ansible_check_mode }}"

- name: generate graylog password hash
  shell: set -o pipefail && echo -n {{ graylog_root_password }} | sha256sum | cut -d" " -f1
  register: graylog_root_password_hash
  changed_when: false
  check_mode: no # run even in check mode, does not change anything
  args:
    executable: /bin/bash

- name: copy graylog server configuration
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner }}"
    group: "{{ item.group }}"
    mode: "{{ item.mode }}"
  notify: restart graylog-server
  ignore_errors: "{{ ansible_check_mode }}"
  diff: "{{ item.diff | default(True) }}"
  with_items:
    - src: etc_graylog_server_server.conf.j2
      dest: /etc/graylog/server/server.conf
      owner: root
      group: graylog
      mode: "0640"
      diff: no # hide diff as it may contain mongodb password
    - src: etc_default_graylog-server.j2
      dest: /etc/default/graylog-server
      owner: root
      group: root
      mode: "0644"

### GRAYLOG SSL/TLS SYSLOG CA CERTIFICATE ###

- name: create directory for graylog certificates/keys
  file:
    path: "/etc/graylog/{{ item }}"
    state: directory
    owner: root
    group: graylog
    mode: "0750"
  with_items:
    - ssl
    - ssl/signing

- name: generate openssl CA/server private key
  openssl_privatekey:
    path: "/etc/graylog/ssl/graylog-ca.key"
    owner: root
    group: graylog
    mode: "0640"
  ignore_errors: "{{ ansible_check_mode }}"

- name: generate openssl certificate signing request
  openssl_csr:
    path: "/etc/graylog/ssl/graylog-ca.csr"
    privatekey_path: "/etc/graylog/ssl/graylog-ca.key"
    common_name: "{{ graylog_fqdn }}"
    owner: root
    group: graylog
    mode: "0640"
  ignore_errors: "{{ ansible_check_mode }}"

- name: generate self-signed openssl CA/server certificate
  openssl_certificate:
    path: "/etc/graylog/ssl/graylog-ca.crt"
    privatekey_path: "/etc/graylog/ssl/graylog-ca.key"
    csr_path: "/etc/graylog/ssl/graylog-ca.csr"
    provider: selfsigned
    owner: root
    group: graylog
    mode: "0640"
  ignore_errors: "{{ ansible_check_mode }}"

- name: create local certificates directory on the controller
  become: no
  delegate_to: localhost
  file:
    path: "{{ playbook_dir }}/data/certificates/"
    state: directory
    mode: "0755"

# the certificate will be uploaded to syslog clients (hosts with rsyslog_enable_forwarding: yes)
- name: download CA/server certificate to the controller
  fetch:
    src: /etc/graylog/ssl/graylog-ca.crt
    dest: "{{ playbook_dir }}/data/certificates/{{ graylog_fqdn }}-graylog-ca.crt"
    flat: yes
  ignore_errors: "{{ ansible_check_mode }}"

### SERVICE ###

- name: enable/disable start/stop graylog-server service
  systemd:
    name: graylog-server
    enabled: "{{ graylog_enable_service }}"
    state: "{{ 'started' if graylog_enable_service else 'stopped' }}"
    daemon_reload: yes
  ignore_errors: "{{ ansible_check_mode }}"
