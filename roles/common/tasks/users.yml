##### USER ACCOUNTS ####

- name: enable root and current user account logins (local)
  user:
    name: "{{ item }}"
    password_lock: no
  with_items:
    - "root"
    - "{{ ansible_user }}"

- name: copy login.defs (umask and password aging)
  template:
    src: etc_login.defs.j2
    dest: /etc/login.defs
    mode: 0600

- name: set shadow file owner to root and mode to 0600
  file:
    path: /etc/shadow
    owner: root
    group: root
    mode: 0600

- name: ensure ansible user home directory is not world-readable
  file:
    state: directory
    path: "{{ ansible_env.HOME }}"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0750

- name: create additional user accounts
  user:
    name: "{{ item.name }}"
    comment: "{{ item.comment | default('') }}"
    create_home: "{{ item.create_home | default(True) }}"
    home: "{{ item.home | default('/home/' + item.name) }}"
    groups: "{{ item.groups | default() }}"
    append: "{{ item.append | default(True) }}"
    generate_ssh_key: "{{ item.generate_ssh_key | default(True) }}"
    password: "{{ (item.password | password_hash('sha512')) if item.password is defined else '' }}"
    update_password: "{{ item.update_password | default('on_create') }}"
  with_items: "{{ linux_users }}"

- name: authorize SSH keys for additional user accounts
  authorized_key:
    user: "{{ item.0.name }}"
    key: "{{ lookup('file', item.1) }}"
  loop: "{{ q('subelements', linux_users, 'ssh_authorized_keys', {'skip_missing': True}) }}"
  ignore_errors: "{{ ansible_check_mode }}"

- name: allow users to run specific commands as root without password
  template:
    src: etc_sudoers.d_nopasswd.j2
    dest: /etc/sudoers.d/nopasswd
    mode: 0440


##### PAM #####

- block:
    - name: configure PAM to prevent core dumps
      pam_limits:
        dest: '/etc/security/limits.d/10.hardcore.conf'
        domain: '*'
        limit_type: hard
        limit_item: core
        value: '0'
        comment: Prevent core dumps for all users. These are usually not needed and may contain sensitive information
    - name: set 10.hardcore.conf perms to 0400 and root ownership
      file:
        path: /etc/security/limits.d/10.hardcore.conf
        owner: 'root'
        group: 'root'
        mode: '0440'
      when: not ansible_check_mode
  when: not os_security_kernel_enable_core_dump | bool

- name: remove 10.hardcore.conf config file
  file:
    path: /etc/security/limits.d/10.hardcore.conf
    state: absent
  when: os_security_kernel_enable_core_dump | bool

# remove libpam-ccreds to disable password caching (prevents connections using cached LDAP credentials, when no connnection to the LDAP server is not available)
# add libpam-tmpdir to use per-user temporary directories
- name: install/remove PAM modules
  apt:
    state: "{{ item.state }}"
    package: "{{ item.name }}"
  with_items:
    - { name: 'libpam-ccreds', state: 'absent' }
    - { name: 'libpam-tmpdir', state: 'present' }
  notify: update pam configuration

# update pam configuration
- name: apply configuration (flush handlers)
  meta: flush_handlers
