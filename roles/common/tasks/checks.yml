- name: check that mandatory variables are correctly defined
  assert:
    quiet: yes
    that: "{{ item }}"
    fail_msg: "One or more variables are not correctly defined. Check role documentation: https://gitlab.com/nodiscc/xsrv/-/tree/master/roles/common"
  with_items:
    - ansible_user_allow_sudo_rsync_nopasswd == ansible_user_allow_sudo_rsync_nopasswd | bool
    - dns_nameservers|type_debug == "list"
    - setup_users == setup_users | bool
    - linux_users|type_debug == "list"
    - kernel_enable_core_dump == kernel_enable_core_dump | bool
    - setup_apt == setup_apt | bool
    - apt_listbugs == apt_listbugs | bool
    - apt_clean_days == apt_clean_days|int
    - apt_unattended_upgrades_origins_patterns|type_debug == "list"
    - apt_purge_nightly == apt_purge_nightly | bool
    - packages_install | type_debug == "list"
    - packages_remove | type_debug == "list"
    - setup_cron == setup_cron | bool
    - cron_log_level == cron_log_level|int
    - setup_dns == setup_dns | bool
    - setup_hostname == setup_hostname | bool
    - setup_hosts_file == setup_hosts_file | bool
    - setup_firewall == setup_firewall | bool
    - firewalld|type_debug == "list"
    - setup_fail2ban == setup_fail2ban | bool
    - setup_msmtp == setup_msmtp | bool
    - setup_ssh == setup_ssh | bool
    - ssh_permit_root_login in ['yes', 'no', 'without-password', 'prohibit-password', 'forced-commands-only']
    - setup_datetime == setup_datetime | bool
    - setup_sysctl == setup_sysctl | bool
    - ssh_accept_locale_env == ssh_accept_locale_env | bool
    - ssh_allow_tcp_forwarding in ['no', 'local', 'remote', 'all']
    - ssh_authorized_keys|type_debug == "list"
    - ssh_log_level in ['QUIET', 'FATAL', 'ERROR', 'INFO', 'VERBOSE', 'DEBUG', 'DEBUG1', 'DEBUG2', 'DEBUG3']
    - ssh_server_revoked_keys|type_debug == "list"
    - ssh_sftp_loglevel in ['QUIET', 'FATAL', 'ERROR', 'INFO', 'VERBOSE', 'DEBUG', 'DEBUG1', 'DEBUG2', 'DEBUG3']
    - sysctl_allow_forwarding == sysctl_allow_forwarding | bool
    - sysctl_answer_ping == sysctl_answer_ping | bool
    - sysctl_vm_swappiness|int
    - sysctl_vm_vfs_cache_pressure|int
    - systemd_logind_kill_user_processes == systemd_logind_kill_user_processes|bool
    - systemd_logind_kill_exclude_users|type_debug == "list"
    - systemd_logind_lock_after_idle_min == systemd_logind_lock_after_idle_min|int
    - bash_timeout == bash_timeout | int
  tags:
    - ssh
    - sysctl
    - firewall
    - apt

- name: check that mandatory variables are correctly defined (msmtp)
  assert:
    quiet: yes
    that: "{{ item }}"
    fail_msg: "One or more variables are not correctly defined. Check role documentation: https://gitlab.com/nodiscc/xsrv/-/tree/master/roles/common"
  when: setup_msmtp | bool
  with_items:
    - msmtp_host is not search("CHANGEME")
    - msmtp_port == msmtp_port|int
    - msmtp_auth_enabled == msmtp_auth_enabled | bool
    - msmtp_tls_enabled == msmtp_tls_enabled | bool
    - msmtp_admin_email is not search("CHANGEME")
    - msmtp_from is not search("CHANGEME")
    - msmtp_starttls == msmtp_starttls | bool
    - msmtp_tls_certcheck == msmtp_tls_certcheck | bool
  tags:
    - mail
    - msmtp

- name: check that mandatory variables are correctly defined (msmtp authentication)
  assert:
    quiet: yes
    that: "{{ item }}"
    fail_msg: "One or more variables are not correctly defined. Check role documentation: https://gitlab.com/nodiscc/xsrv/-/tree/master/roles/common"
  when:
    - setup_msmtp | bool
    - msmtp_auth_enabled | bool
  with_items:
    - msmtp_username is not search("CHANGEME")
    - msmtp_password is not search("CHANGEME")
  tags:
    - mail
    - msmtp

- name: check that variables are correctly defined (hosts)
  assert:
    quiet: yes
    fail_msg: "One or more variables are not correctly defined. Check role documentation: https://gitlab.com/nodiscc/xsrv/-/tree/master/roles/common"
    that:
      - item.ip_address | ansible.utils.ipaddr
      - (item.state is not defined) or (item.state in ['present', 'absent'])
  when: setup_hosts_file | bool
  with_items: "{{ hosts_file_entries }}"
  tags: hosts

- name: check that variables are correctly defined (apt-listbugs)
  assert:
    quiet: yes
    fail_msg: "One or more variables are not correctly defined. Check role documentation: https://gitlab.com/nodiscc/xsrv/-/tree/master/roles/common"
    that:
      - apt_listbugs_action in ['force-no', 'force-yes', 'force-default']
      - apt_listbugs_ignore_list|type_debug == "list"
  when: apt_listbugs | bool
  tags:
    - apt
    - apt-listbugs

- name: check that variables are correctly defined (firewalld_zone_sources)
  assert:
    quiet: yes
    that:
      - item.zone is string
      - item.sources|type_debug == "list"
      - (item.state is not defined) or (item.state in ['enabled','disabled'])
      - (item.permanent is not defined) or (item.permanent == item.permanent | bool)
      - (item.immediate is not defined) or (item.immediate == item.permanent | bool)
    fail_msg: "One or more variables are not correctly defined. Check role documentation: https://gitlab.com/nodiscc/xsrv/-/tree/master/roles/common"
  when:
    - setup_firewall | bool
    - (item.delete is not defined) or (not item.delete)
  with_items: "{{ firewalld_zone_sources }}"
  tags:
    - firewall

- name: check that variables are correctly defined (firewalld_zone_services)
  assert:
    quiet: yes
    that:
      - item.zone is string
      - item.services|type_debug == "list"
      - (item.state is not defined) or (item.state in ['enabled','disabled'])
      - (item.permanent is not defined) or (item.permanent == item.permanent | bool)
      - (item.immediate is not defined) or (item.immediate == item.permanent | bool)
    fail_msg: "One or more variables are not correctly defined. Check role documentation: https://gitlab.com/nodiscc/xsrv/-/tree/master/roles/common"
  when: setup_firewall | bool
  with_items: "{{ firewalld_zone_services }}"
  tags:
    - firewall

- name: check that DNS resolvers are configured
  assert:
    quiet: yes
    that:
      - dns_nameservers | length != 0
    fail_msg: "setup_dns is set to yes but no resolvers (dns_nameservers) have been configured"
  when: setup_dns | bool
  tags: dns

- name: check that variables are correctly defined (dns_nameservers)
  assert:
    quiet: yes
    that: item == item | ansible.utils.ipaddr('address')
    fail_msg: "dns_nameservers: {{ item }} is not a valid IP address"
  when: setup_dns | bool
  with_items: "{{ dns_nameservers }}"
