# netdata configuration
# You can download the running configuration of your netdata instance, using:
# curl http://localhost:19999/netdata.conf

[db]
   update every = {{ netdata_update_every }}
   mode = dbengine
   storage tiers = 3
   page cache size MB = {{ netdata_dbengine_page_cache_size }}
   dbengine tier 0 disk space MB = 0
   dbengine tier 0 retention days = {{ netdata_dbengine_tier0_retention_days }}
   dbengine tier 1 disk space MB = 0
   dbengine tier 1 retention days = {{ netdata_dbengine_tier1_retention_days }}
   dbengine tier 1 update every iterations = 30
   dbengine tier 2 disk space MB = 0
   dbengine tier 2 retention days = {{ netdata_dbengine_tier2_retention_days }}
   dbengine tier 2 update every iterations = 60

[logs]
   logs to trigger flood protection = 1000
   logs flood protection period = 60
   level = info
   daemon = journal
   collector = journal
   access = /var/log/netdata/access.log
   health = journal

{% if not netdata_enable_health_notifications %}
[health]
   script to execute on alarm = /bin/true
{% endif %}

[web]
   default port = 19999
   allow connections from = {{ netdata_allow_connections_from }} localhost
{% if netdata_allow_dashboard_from is defined %}
   allow dashboard from = {{ netdata_allow_dashboard_from }} localhost
   allow badges from = {{ netdata_allow_dashboard_from }} localhost
   allow netdata.conf from = {{ netdata_allow_dashboard_from }} localhost
{% else %}
   allow netdata.conf from = {{ netdata_allow_connections_from }} localhost
{% endif %}
{% if netdata_allow_streaming_from is defined %}
   allow streaming from = {{ netdata_allow_streaming_from }} localhost
{% endif %}

   ssl key = /etc/ssl/netdata/netdata-key.pem
   ssl certificate = /etc/ssl/netdata/netdata-cert.pem
   web files owner = root
   web files group = netdata
   accept a streaming request every seconds = 0

[registry]
   enabled = yes
   registry to announce = {{ netdata_public_url }}

{% if netdata_streaming_send_enabled %}
[ml]
    enabled = no
{% endif %}

[plugins]
{% for plugin in netdata_disabled_plugins %}
   {{ plugin }} = no
{% endfor %}

[plugin:proc:diskspace]
	exclude space metrics on paths = /proc/* /sys/* /var/run/user/* /run/user/* /snap/* /var/lib/docker/* /dev /dev/shm
