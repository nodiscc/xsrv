##### NETDATA MONITORING SYSTEM #####
# default interval between netdata updates (in seconds)
# each plugin/module can override this setting (but only to set a longer interval)
netdata_update_every: 2
# (MiB) amount of memory dedicated to caching metric values
netdata_dbengine_page_cache_size: 32
# (MiB) amount of disk space dedicated to storing Netdata metric values/metadata
netdata_dbengine_disk_space: 800
# space-separated list of IP addresses authorized to access netdata dashboard/API (wildcards accepted, CIDR notation NOT accepted)
netdata_allow_connections_from: '10.* 192.168.* 172.16.* 172.17.* 172.18.* 172.19.* 172.20.* 172.21.* 172.22.* 172.23.* 172.24.* 172.25.* 172.26.* 172.27.* 172.28.* 172.29.* 172.30.* 172.31.*'
# enable netdata cloud/SaaS features (yes/no)
netdata_cloud_enabled: no
# enable netdata self-monitoring charts/alarms (yes/no)
netdata_self_monitoring_enabled: no
# enable/disable netdata debug/error/access logs (yes/no)
netdata_disable_debug_log: yes
netdata_disable_error_log: no
netdata_disable_access_log: yes
# public port (i.e. outside NAT) used to access netdata, used for links in mail notifications, and the xsrv.homepage role
netdata_public_port: 19999
# netdata plugins to disable
netdata_disabled_plugins:
  - ebpf
  - coredns
  - unbound
  - rabbitmq
  - mysql
  - prometheus
  - bind
  - pihole
  - k8s_kubelet
  - pulsar
  - solr
  - supervisord
  - lighttpd
# Netdata notification downtimes (list), no notifications will be sent during these intervals
# start/end: cron expression for downtime start/end time. Example:
# netdata_notification_downtimes:
#   - start: "01 19 * * *"
#     end: "00 07 * * *"
netdata_notification_downtimes: []
# enable/disable alarm notifications (yes/no)
netdata_enable_health_notifications: yes
# firewall zones for the netdata Web service, if nodiscc.xsrv.common/firewalld role is deployed
# 'zone:' is one of firewalld zones, set 'state:' to 'disabled' to remove the rule (the default is state: enabled)
netdata_firewalld_zones:
  - zone: internal
    state: enabled

## NETDATA CHECKS ##
# Process checks
#   name: process group name to check (apps_groups.conf)
#   min_count: minimum expected number of processes
#   interval: time interval (seconds) between checks
# Example:
# netdata_process_checks:
#   - { name: ssh, min_count: 1, interval: 20} # SSH server
#   - { name: time, min_count: 1, interval: 20} # NTP daemon
#   - { name: fail2ban, min_count: 1, interval: 20} # bruteforce prevention/IPS
#   - { name: httpd, min_count: 1, interval: 20} # web server
#   - { name: sql, min_count: 1, interval: 20} # SQL database engine
#   - { name: gitea, min_count: 1, interval: 20} # gitea self-hosted software forge
#   - { name: gitlab_runner, min_count: 1, interval: 20} # gitlab CI job runner
#   - { name: murmurd, min_count: 1, interval: 20} # mumble VoIP server
#   - { name: pulseaudio, min_count: 1, interval: 20} # pulseaudio network sound server
#   - { name: auth, min_count: 1, interval: 20} # openldap server
#   - { name: media, min_count: 1, interval: 20} # jellyfin media server
#   - { name: samba, min_count: 2, interval: 20} # samba file sharing server (smbd+nmbd)
netdata_process_checks: []
# HTTP checks
# uses the same syntax and parameters as netdata httpcheck module
# https://learn.netdata.cloud/docs/agent/collectors/go.d.plugin/modules/httpcheck/
# https://github.com/netdata/go.d.plugin/blob/master/config/go.d/httpcheck.conf
# Example:
# netdata_http_checks:
#   - name: example.com
#     url: https://website.com:444
#     status_accepted:
#       - 200
#       - 401
#     tls_skip_verify: yes
#     timeout: 10
#     update_every: 20
netdata_http_checks: []
# X509/SSL/TLS certificate checks (time to expiration, revocation status)
# uses the same syntax and parameters as netdata x509check module
# Port is mandatory for all non-file schemes
# https://learn.netdata.cloud/docs/agent/collectors/go.d.plugin/modules/x509check/
# https://github.com/netdata/go.d.plugin/blob/master/config/go.d/x509heck.conf
# Example:
# netdata_x509_checks:
#   - name example-org
#     source: https://example.org:443
#     days_until_expiration_critical: 15
#     timeout: 3
#     tls_skip_verify: yes
#     update_every: 20
netdata_x509_checks: []
# Netdata TCP port checks
#   name: readable name of the check
#   host: hostname or IP address to contact
#   ports: list of TCP port numbers to check
#   interval: time interval (seconds) between checks
# Example:
# netdata_port_checks:
#   - name: ldap-available
#     host: 192.168.10.10
#     ports: [389, 636]
#     interval: 10
#   - name: mumble
#     host: 192.168.10.10
#     ports: [64738]
#     interval: 10
netdata_port_checks: []
# Netdata file checks
# see https://raw.githubusercontent.com/netdata/go.d.plugin/master/config/go.d/filecheck.conf
# Example:
# netdata_file_checks:
#   - name: files_example
#     files:
#       include:
#         - '/path/to/file1'
#         - '/path/to/file2'
#   - name: dirs_example
#     dirs:
#       collect_dir_size: yes
#       include:
#         - '/path/to/dir1'
#         - '/path/to/dir2'
netdata_file_checks: []
# Netdata ping checks
# List of hosts to ping using the fping plugin
# Example:
# netdata_fping_hosts:
#   - netdata.cloud
#   - debian.org
#   - 1.1.1.1
netdata_fping_hosts: []
# Delay between ping checks (ms)
netdata_fping_ping_every: 5000
# Delay between ping chart updates (seconds) (this shohuld be longer than netdata_fping_ping_every)
netdata_fping_update_every: 10
# Do not send notifications on ping check failures (yes/no)
netdata_fping_alarms_silent: no

## NETDATA STREAMING ##
# stream charts to a "parent" netdata instance (yes/no)
netdata_streaming_send_enabled: no
# netdata instance to stream metrics to (protocol:hostname:port:SSL)
netdata_streaming_destination: "tcp:monitoring.CHANGEME.org:19999:SSL"
# enable/disable accepting streaming from another netdata instance (yes/no)
netdata_streaming_receive_enabled: no
# API key (UUID) used to authenticate on the destination instance/allow from source instances
netdata_api_key: "CHANGEME"
# enable health alarms for charts received from "child" netdata instances (yes/no)
# if this is enabled, you may want to set `netdata_enable_health_notifications: no` on child instances, to prevent duplicate notifications
netdata_streaming_receive_alarms: no

## NETDATA MODULES ##
# setup needrestart and netdata-needrestart module (yes/no)
setup_needrestart: yes
# automatically restart services that require it immediately after upgrades (yes/no)
needrestart_autorestart_services: yes
# reboot the OS automatically if required after a Linux kernel upgrade
# set to no to disable automatic reboot/services restart completely,
# or use cron syntax (https://crontab.guru/) to define the schedule
# you may want to schedule a monitoring downtime for a few minutes at the same time, see netdata_downtimes
# Example: needrestart_autorestart_cron: "00 5 * * *" # every day at 05:00
needrestart_autorestart_cron: no
# setup netdata-logcount module (yes/no)
setup_netdata_logcount: yes
# (minutes) interval between updates of log message counts in the logcount module. Set to 0 to disable the module and cron job
netdata_logcount_update_interval: 1
# maximum acceptable ERROR message in logs over the last period before raising a WARNING or CRITICAL alert
netdata_logcount_error_threshold_warn: 10
netdata_logcount_error_threshold_crit: 100
# maximum acceptable WARNING message in logs over the last period before raising a WARNING alert
netdata_logcount_warning_threshold_warn: 10
# user to send logcount notifications to (eg. sysadmin, silent...)
netdata_logcount_notification_to: "silent"
# setup netdata-debsecan module (yes/no)
setup_netdata_debsecan: yes
# monitor systemd units states
netdata_monitor_systemd_units: yes
# setup monitoring of pending package upgrades
setup_netdata_apt: yes
