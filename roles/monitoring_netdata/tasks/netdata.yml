- name: load distribution-specific variables
  include_vars:
    file: "{{ ansible_facts.distribution }}-{{ ansible_facts.distribution_release }}.yml"

- name: install netdata requirements
  apt:
    package:
      - bash
      - curl
      - iproute2
      - python3
      - python3-yaml
      - python3-dnspython
      - "{{ python3_ipaddr_package }}"
      - lm-sensors
      - libmnl0
      - netcat-openbsd
      - libuv1
      - libjudydebian1
      - openssl
      - liblz4-1
      - gnupg
      - jq # podman container name parsing
      - smartmontools # smart log monitoring
      - git # required to clone additional modules
      - acl # required to use "become" as a non-root user
    state: present

### INSTALL NETDATA FROM PACKAGECLOUD APT REPOSITORY #####

- name: MIGRATION/1.24.0 - remove files from old versions of the role
  file:
    path: "{{ item }}"
    state: absent
  notify: update apt cache
  loop:
    - /etc/apt/sources.list.d/netdata-packagecloud.list
    - /etc/apt/preferences.d/99-netdata-packagecloud

- name: MIGRATION/1.24.0 - remove packages from old versions of the role
  apt:
    package: netdata-ebpf-code-legacy
    state: absent

- name: add netdata APT signing keys
  copy:
    src: usr_share_keyrings_netdata.gpg
    dest: /usr/share/keyrings/netdata.gpg
    owner: root
    group: root
    mode: "0644"
  notify: update apt cache

- name: copy netdata APT sources/pinning configuration
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: "0644"
  with_items:
    - src: etc_apt_preferences.d_99-netdata.j2
      dest: /etc/apt/preferences.d/99-netdata
    - src: etc_apt_sources.list.d_netdata.list.j2
      dest: /etc/apt/sources.list.d/netdata.list
  notify: update apt cache

# update APT cache for netdata packages to become available
- name: update APT cache to apply configuration changes
  meta: flush_handlers

- name: install netdata
  apt:
    package: netdata
    state: present

##### SELF-SIGNED SSL CERTIFICATES #####

- name: install requirements for self-signed certificates generation
  apt:
    package:
      - python3-openssl
      - python3-cryptography
    state: present

- name: create directory for netdata SSL certs/keys
  file:
    path: /etc/ssl/netdata
    state: directory
    owner: root
    group: netdata
    mode: "0750"
  ignore_errors: "{{ ansible_check_mode }}"

- name: generate openssl private key
  openssl_privatekey:
    path: "/etc/ssl/netdata/netdata-key.pem"
    owner: root
    group: netdata
    mode: "0640"
  notify: restart netdata
  ignore_errors: "{{ ansible_check_mode }}"

- name: generate openssl certificate signing request (CSR)
  openssl_csr:
    path: "/etc/ssl/netdata/netdata-csr.pem"
    privatekey_path: "/etc/ssl/netdata/netdata-key.pem"
    common_name: "{{ inventory_hostname }}"
  ignore_errors: "{{ ansible_check_mode }}"

- name: generate self-signed openssl certificate
  community.crypto.x509_certificate:
    path: "/etc/ssl/netdata/netdata-cert.pem"
    privatekey_path: "/etc/ssl/netdata/netdata-key.pem"
    csr_path: "/etc/ssl/netdata/netdata-csr.pem"
    provider: selfsigned
    owner: root
    group: netdata
    mode: "0640"
    force: no
  notify: restart netdata
  ignore_errors: "{{ ansible_check_mode }}"

### NETDATA CONFIGURATION ###

# required for systemd services charts/cgroups accounting
- name: create required directories
  file:
    path: "{{ item }}"
    state: directory
    mode: "0755"
  with_items:
    - '/etc/systemd/system.conf.d' # systemd dynamic configuration directory
    - '/var/log/smartd' # smartd log directory

- name: enable systemd cgroups resource accounting (systemd services chart)
  template:
    src: 'etc_systemd_system.conf.d_accounting.conf.j2'
    dest: '/etc/systemd/system.conf.d/accounting.conf'
    mode: "0644"
  notify: re-execute the systemd manager
  ignore_errors: "{{ ansible_check_mode }}"

- name: configure smartd
  template:
    src: etc_default_smartmontools.j2
    dest: /etc/default/smartmontools
    mode: "0644"
  notify: restart smartd
  ignore_errors: "{{ ansible_check_mode }}"

- name: create directories for netdata configuration
  file:
    path: "{{ item.path }}"
    state: directory
    owner: "{{ item.owner | default('root') }}"
    group: netdata
    mode: "0750"
  with_items:
    - path: /var/lib/netdata/cloud.d
      owner: netdata
    - path: /etc/netdata/go.d/filecheck.conf.d
    - path: /etc/netdata/go.d/httpcheck.conf.d
    - path: /etc/netdata/go.d/x509check.conf.d
    - path: /etc/netdata/go.d/phpfpm.conf.d
    - path: /etc/netdata/go.d/portcheck.conf.d
    - path: /etc/netdata/health.d/processes.conf.d
    - path: /etc/netdata/health.d/filecheck.conf.d
    - path: /etc/netdata/health.d/systemdunits.conf.d
    - path: /usr/libexec/netdata/python.d/
    - path: /etc/netdata/health.d/
  ignore_errors: "{{ ansible_check_mode }}"

- name: copy netdata configuration files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: netdata
    mode: "0640"
  with_items:
    - { src: 'etc_netdata_netdata.conf.j2', dest: '/etc/netdata/netdata.conf' } # general configuration
    - { src: 'etc_netdata_stream.conf.j2', dest: '/etc/netdata/stream.conf' } # streaming and replication configuration
    - { src: 'etc_netdata_go.d.conf.j2', dest: '/etc/netdata/go.d.conf' } # go.d plugin
    - { src: 'etc_netdata_go.d_systemdunits.conf.j2', dest: '/etc/netdata/go.d/systemdunits.conf' } # systemd units monitoring
    - { src: 'etc_netdata_go.d_apache.conf.j2', dest: '/etc/netdata/go.d/apache.conf' } # apache server status monitoring
    - { src: 'etc_netdata_health_alarm_notify.conf.j2', dest: '/etc/netdata/health_alarm_notify.conf' } # health notifications configuration # noqa 204
    - { src: 'var_lib_netdata_cloud.d_cloud.conf.j2', dest: '/var/lib/netdata/cloud.d/cloud.conf', owner: "netdata" } # cloud/SaaS service configuration # noqa 204
    - { src: 'etc_netdata_.opt-out-from-anonymous-statistics.j2', dest: '/etc/netdata/.opt-out-from-anonymous-statistics' } # disable telemetry # noqa 204
    - { src: 'etc_netdata_health.d_processes.conf.d_000-processes.conf.j2', dest: '/etc/netdata/health.d/processes.conf.d/000-processes.conf' } # process checks
    - { src: 'etc_netdata_go.d_filecheck.conf.d_000-filecheck.conf.j2', dest: '/etc/netdata/go.d/filecheck.conf.d/000-filecheck.conf' } # file checks
    - { src: 'etc_netdata_health.d_filecheck.conf.d_000-filecheck.conf.j2', dest: '/etc/netdata/health.d/filecheck.conf.d/000-filecheck.conf' } # file checks
    - { src: 'etc_netdata_health.d_systemdunits.conf.d_000-systemdunits.conf.j2', dest: '/etc/netdata/health.d/systemdunits.conf.d/000-systemdunits.conf' } # file checks
    - { src: 'etc_netdata_go.d_httpcheck.conf.d_000-httpcheck.conf.j2', dest: '/etc/netdata/go.d/httpcheck.conf.d/000-httpcheck.conf' } # HTTP checks
    - { src: 'etc_netdata_go.d_x509check.conf.d_000-x509check.conf.j2', dest: '/etc/netdata/go.d/x509check.conf.d/000-x509check.conf' } # SSL certificate checks
    - { src: 'etc_netdata_go.d_phpfpm.conf.d_000-phpfpm.conf.j2', dest: '/etc/netdata/go.d/phpfpm.conf.d/000-phpfpm.conf' } # SSL certificate checks
    - { src: 'etc_netdata_go.d_portcheck.conf.d_000-portcheck.conf.j2', dest: '/etc/netdata/go.d/portcheck.conf.d/000-portcheck.conf' } # TCP port checks
    - { src: 'etc_netdata_go.d_ping.conf.j2', dest: '/etc/netdata/go.d/ping.conf' } # ping checks
    - { src: 'etc_netdata_health.d_ping.conf.j2', dest: '/etc/netdata/health.d/ping.conf' } # fping checks
  notify:
    - assemble netdata configuration
    - restart netdata
  ignore_errors: "{{ ansible_check_mode }}"
  tags: netdata-config

- name: install netdata downtime cron jobs
  template:
    src: etc_cron.d_netdata-downtime.j2
    dest: /etc/cron.d/netdata-downtime
    owner: root
    group: root
    mode: "0644"
  tags: netdata-downtime

- name: add netdata user to msmtp group
  user:
    name: netdata
    groups: msmtp
    append: yes
  ignore_errors: "{{ ansible_check_mode }}"
  when:
    - ansible_local.msmtp.ansible_managed is defined
    - ansible_local.msmtp.ansible_managed | bool
  tags:
    - mail
    - msmtp

- name: create directory for netdata systemd overrides
  file:
    state: directory
    path: /etc/systemd/system/netdata.service.d/
    owner: root
    group: root
    mode: "0755"

- name: configure netdata systemd unit overrides
  template:
    src: etc_systemd_system_netdata.service.d_override.conf.j2
    dest: /etc/systemd/system/netdata.service.d/override.conf
    owner: root
    group: root
    mode: "0644"
  notify:
    - reload systemd unit files
    - restart netdata

# apply netdata systemd overrides
- name: apply configuration (flush handlers)
  meta: flush_handlers


- name: start and enable netdata
  service:
    name: netdata
    state: started
    enabled: yes
  ignore_errors: "{{ ansible_check_mode }}"
  tags: services

- name: apply netdata configuration (flush handlers)
  meta: flush_handlers
