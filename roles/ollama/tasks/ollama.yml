- name: download ollama archive
  get_url:
    url: "https://github.com/ollama/ollama/releases/download/{{ ollama_version }}/ollama-linux-amd64.tgz"
    dest: /root/ollama-linux-amd64.tgz
    owner: root
    group: root
    mode: "0755"

- name: create ollama zip extraction directory
  file:
    path: "/root/ollama-{{ ollama_version }}-unpack"
    state: directory
    mode: "0750"
  check_mode: no # create even in check mode so that following tasks don't fail

- name: extract ollama archive
  unarchive:
    src: "/root/ollama-linux-amd64.tgz"
    dest: "/root/ollama-{{ ollama_version }}-unpack"
    owner: root
    group: root
    remote_src: yes
    mode: u=rwX,g=rX,o=
    creates: "/root/ollama-{{ ollama_version }}-unpack/lib"
  no_log: True
  ignore_errors: "{{ ansible_check_mode }}"

- name: copy ollama files to installation directories
  copy:
    remote_src: yes
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: "0755"
  ignore_errors: "{{ ansible_check_mode }}"
  loop:
    - src: "/root/ollama-{{ ollama_version }}-unpack/bin/ollama"
      dest: /usr/local/bin/ollama
    - src: "/root/ollama-{{ ollama_version }}-unpack/lib/ollama"
      dest: /usr/local/lib/
  notify: restart ollama

- name: create ollama user
  user:
    name: ollama
    shell: /bin/bash
    comment: "Ollama local LLM service"
    password: "*"
    home: "/var/lib/ollama"
  ignore_errors: "{{ ansible_check_mode }}"

- name: install ollama systemd service/unit file
  template:
    src: "etc_systemd_system_ollama.service.j2"
    dest: "/etc/systemd/system/ollama.service"
    mode: "0644"
  notify:
    - reload systemd unit files
    - restart ollama

# load systemd unit file if changed
- name: apply configuration (flush handlers)
  meta: flush_handlers

- name: enable/disable start/stop ollama service
  systemd:
    name: ollama
    enabled: "{{ ollama_enable_service }}"
    state: "{{ 'started' if ollama_enable_service else 'stopped' }}"
  ignore_errors: "{{ ansible_check_mode }}"

- name: pull ollama models (this can take a while) (always returns changed)
  become: yes
  become_user: ollama
  command:
    cmd: /usr/local/bin/ollama pull "{{ item }}"
  loop: "{{ ollama_models }}"
  when: ollama_enable_service | bool
  changed_when: yes # always pulls the latest version
  ignore_errors: "{{ ansible_check_mode }}"
